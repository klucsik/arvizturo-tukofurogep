"""Add charity-stores M:M rel.

Revision ID: 4ab2ff23b3eb
Revises: 6b01db664395
Create Date: 2019-10-27 02:04:52.647998

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4ab2ff23b3eb'
down_revision = '6b01db664395'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('charity_stores',
    sa.Column('charity_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['charity_id'], ['charity.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('charity_id', 'store_id')
    )
    op.drop_table('ab_permission')
    op.drop_table('ab_register_user')
    op.drop_table('ab_user')
    op.drop_table('ab_view_menu')
    op.drop_table('ab_user_role')
    op.drop_table('ab_permission_view_role')
    op.drop_table('ab_role')
    op.drop_table('ab_permission_view')
    op.create_foreign_key(None, 'user', 'charity', ['charity_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.create_table('ab_permission_view',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('view_menu_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['ab_permission.id'], name='ab_permission_view_permission_id_fkey'),
    sa.ForeignKeyConstraint(['view_menu_id'], ['ab_view_menu.id'], name='ab_permission_view_view_menu_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_permission_view_pkey'),
    sa.UniqueConstraint('permission_id', 'view_menu_id', name='ab_permission_view_permission_id_view_menu_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ab_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_role_pkey'),
    sa.UniqueConstraint('name', name='ab_role_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ab_permission_view_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_view_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_view_id'], ['ab_permission_view.id'], name='ab_permission_view_role_permission_view_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], name='ab_permission_view_role_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_permission_view_role_pkey'),
    sa.UniqueConstraint('permission_view_id', 'role_id', name='ab_permission_view_role_permission_view_id_role_id_key')
    )
    op.create_table('ab_user_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], name='ab_user_role_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], name='ab_user_role_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_user_role_pkey'),
    sa.UniqueConstraint('user_id', 'role_id', name='ab_user_role_user_id_role_id_key')
    )
    op.create_table('ab_view_menu',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_view_menu_pkey'),
    sa.UniqueConstraint('name', name='ab_view_menu_name_key')
    )
    op.create_table('ab_user',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('login_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fail_login_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('changed_by_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], name='ab_user_changed_by_fk_fkey'),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], name='ab_user_created_by_fk_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_user_pkey'),
    sa.UniqueConstraint('email', name='ab_user_email_key'),
    sa.UniqueConstraint('username', name='ab_user_username_key')
    )
    op.create_table('ab_register_user',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('registration_hash', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ab_register_user_pkey'),
    sa.UniqueConstraint('username', name='ab_register_user_username_key')
    )
    op.create_table('ab_permission',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_permission_pkey'),
    sa.UniqueConstraint('name', name='ab_permission_name_key')
    )
    op.drop_table('charity_stores')
    # ### end Alembic commands ###
